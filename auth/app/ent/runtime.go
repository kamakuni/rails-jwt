// Code generated by ent, DO NOT EDIT.

package ent

import (
	"github.com/kamakuni/rails-jwt/auth/app/ent/oauthclient"
	"github.com/kamakuni/rails-jwt/auth/app/ent/refreshtoken"
	"github.com/kamakuni/rails-jwt/auth/app/ent/schema"
	"github.com/kamakuni/rails-jwt/auth/app/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	oauthclientFields := schema.OAuthClient{}.Fields()
	_ = oauthclientFields
	// oauthclientDescClientSecret is the schema descriptor for client_secret field.
	oauthclientDescClientSecret := oauthclientFields[0].Descriptor()
	// oauthclient.ClientSecretValidator is a validator for the "client_secret" field. It is called by the builders before save.
	oauthclient.ClientSecretValidator = oauthclientDescClientSecret.Validators[0].(func(string) error)
	// oauthclientDescURL is the schema descriptor for url field.
	oauthclientDescURL := oauthclientFields[1].Descriptor()
	// oauthclient.URLValidator is a validator for the "url" field. It is called by the builders before save.
	oauthclient.URLValidator = oauthclientDescURL.Validators[0].(func(string) error)
	refreshtokenFields := schema.RefreshToken{}.Fields()
	_ = refreshtokenFields
	// refreshtokenDescToken is the schema descriptor for token field.
	refreshtokenDescToken := refreshtokenFields[0].Descriptor()
	// refreshtoken.TokenValidator is a validator for the "token" field. It is called by the builders before save.
	refreshtoken.TokenValidator = refreshtokenDescToken.Validators[0].(func(string) error)
	// refreshtokenDescExpired is the schema descriptor for expired field.
	refreshtokenDescExpired := refreshtokenFields[1].Descriptor()
	// refreshtoken.DefaultExpired holds the default value on creation for the expired field.
	refreshtoken.DefaultExpired = refreshtokenDescExpired.Default.(bool)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescEmail is the schema descriptor for email field.
	userDescEmail := userFields[0].Descriptor()
	// user.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	user.EmailValidator = userDescEmail.Validators[0].(func(string) error)
	// userDescPassword is the schema descriptor for password field.
	userDescPassword := userFields[1].Descriptor()
	// user.PasswordValidator is a validator for the "password" field. It is called by the builders before save.
	user.PasswordValidator = userDescPassword.Validators[0].(func(string) error)
}
